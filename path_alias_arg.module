<?php

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_preprocess_node().
 */
function path_alias_arg_preprocess_node(array &$variables) {
  $node = $variables['node'];

  if ($node->bundle() === 'filtered_page') {
    $variables['#cache']['contexts'][] = 'node_arguments';
    $request = \Drupal::request();
    $arg1 = $request->attributes->get('path_alias_arguments');
    $a = 'b';
  }
}

/**
 * Implements hook_entity_presave().
 */
function path_alias_arg_entity_presave(EntityInterface $entity) {
  /** @var \Drupal\path_alias_arg\PathAliasArgStorage $storage */
  $storage = \Drupal::service('path_alias_arg.path_alias_arg_storage');
  if ($record = $storage->getByEntityUuid($entity->uuid())) {
    $storage->updateRecord($entity->uuid(), strtolower(urlencode($entity->label())));
    return;
  }
  $storage->insertRecord($entity->uuid(), strtolower(urlencode($entity->label())), $entity->getEntityTypeId());
}

